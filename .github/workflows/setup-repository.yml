name: Setup repository
on:
  push:
    paths:
      - cookiecutter.yml
jobs:
  setup:
    name: Reinitialize repository
    runs-on: ubuntu-latest
    env:
      REPO_SETUP_TOKEN: ${{ secrets.REPO_SETUP_TOKEN }}
    steps:
      - name: Do not run scaffolding on template repository
        shell: bash
        # This workflow runs when the `cookiecutter.json` file is modified.
        # This is the trick to re-init a repository, but we don't want to
        # run this action if this file is modified in the origin template repository.
        #
        # Using the GitHub rest API allows us to identify if the current repository
        # is a template repository or not.
        run: |
          curl --silent -X GET \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.baptiste-preview+json" \
            https://api.github.com/repos/$GITHUB_REPOSITORY \
            | jq --exit-status '.is_template == false';
      - uses: actions/checkout@v2
        with:
          # Comminting workflow files using the regular GITHUB_TOKEN will fail with 
          # `Git Error: Refusing to allow a GitHub App to create or update workflow without workflows permission`.
          # This is by design to prevent third-parties from adding malicious workflow files.
          #
          # Generate a new personal access token with the workflow `scope` does the trick.
          token: ${{ env.REPO_SETUP_TOKEN || secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install cookiecutter

      - name: Delete/Rename files
        # This will delete/rename files according to the cloudsql and nodejs flags set in cookicutter.json
        shell: bash
        run: | 
         export $(sed -e 's/:[^:\/\/]/="/g;s/$/"/g;s/ *=/=/g' cookiecutter.yml); \
         if [ "$cloudsql" = false ] ;
         then
          find ./{{cookiecutter.name}}/helm/ -name "*cloudsql*" -delete
          find ./{{cookiecutter.name}}/terraform/ -name "*cloudsql*" -delete
         else
          rm ./{{cookiecutter.name}}/helm/{{cookiecutter.application}}-st.yaml
          rm ./{{cookiecutter.name}}/helm/{{cookiecutter.application}}-pr.yaml
          mv ./{{cookiecutter.name}}/helm/{{cookiecutter.application}}-cloudsql-st.yaml ./{{cookiecutter.name}}/helm/{{cookiecutter.application}}-st.yaml
          mv ./{{cookiecutter.name}}/helm/{{cookiecutter.application}}-cloudsql-pr.yaml ./{{cookiecutter.name}}/helm/{{cookiecutter.application}}-pr.yaml
         fi
         if [ "$nodejs" = false ] ;
         then
          rm -rf ./{{cookiecutter.name}}/src
          rm -rf ./{{cookiecutter.name}}/src-cloudsql
          find ./{{cookiecutter.name}}/ -name "*Dockerfile*" -delete
          find ./{{cookiecutter.name}}/ -name "*package*" -delete
         fi
         if [ "$nodejs" = true ] && [ "$cloudsql" = false ];
         then
          rm -rf ./{{cookiecutter.name}}/src-cloudsql
          find ./{{cookiecutter.name}}/ -name "*cloudsql*" -delete
         fi
         if [ "$nodejs" = true ] && [ "$cloudsql" = true ];
         then
          rm -rf ./{{cookiecutter.name}}/src
          rm ./{{cookiecutter.name}}/package.json
          mkdir ./{{cookiecutter.name}}/src
          mv ./{{cookiecutter.name}}/src-cloudsql/* ./{{cookiecutter.name}}/src/
          mv ./{{cookiecutter.name}}/package-cloudsql.json  ./{{cookiecutter.name}}/package.json
         fi
      - name: Scaffolding repository
        # cookiecutter is command-line utility to create projects from templates
        # https://github.com/cookiecutter/cookiecutter
        #
        # --no-input      Do not prompt for parameters and only use
        #                 cookiecutter.json file content
        #
        # --output-dir    Where to output the generated project dir into
        run: cookiecutter --no-input --output-dir ./cookiecutter-temp

      - name: Prepare root directory
        shell: bash
        # Remove all files and folder exepct the following
        run: |
          find ./ -maxdepth 1 \
          ! -name '.git' \
          ! -name 'cloudbuild.yaml' \
          ! -name 'helm' \
          ! -name 'spinnaker' \
          ! -name 'terraform' \
          ! -name 'src' \
          ! -name 'Dockerfile' \
          ! -name 'package.json' \
          ! -name 'cookiecutter-temp' \
          ! -name '.' \
          ! -exec rm -rf {} +
      - name: Move files to root
        shell: bash
        # The cookiecutter-temp/ folder contains a single folder which is the
        # generated project by cookiecutter. We want to move all the project
        # files into the root directory so we can reinitialize git in the next step
        run: |
          rsync -r ./cookiecutter-temp/*/ . && \
          rm -rf ./cookiecutter-temp/
      - name: Reinitialize git repository
        shell: bash
        # Reinitialize git after scaffolding this repository.
        # We use `git checkout --orphan` to create a branch in a git init-like state.
        # By force pushing this as `main` we end up with a new clean git history.
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com" && \
          git config --global user.name "github-actions[bot]" && \
          git checkout --orphan temp-branch && \
          git add . && \
          git commit -m 'Initial commit' && \
          git push origin temp-branch:main -f
      - name: Remove secret REPO_SETUP_TOKEN
        # After re-initializing the repository, we can remove the `REPO_SETUP_TOKEN` secret.
        shell: bash
        if: ${{ env.REPO_SETUP_TOKEN }}
        run: |
          curl \
            -X DELETE --fail \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ env.REPO_SETUP_TOKEN }}" \
            https://api.github.com/repos/$GITHUB_REPOSITORY/actions/secrets/REPO_SETUP_TOKEN
